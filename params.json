{
  "name": "Payoneer Escrow Payments",
  "tagline": "Integrate Escrow Payments into a online marketplace",
  "body": "##Overview\r\nPayoneer Escrow APIs makes it easy to integrate secure escrow payments into a marketplace. In this section, you'll see how to:\r\n* Get a simple marketplace integrated with Payoneer Escrow API & enable secure escrow payments to their buyers & sellers.\r\n* Take more control of the user experience.\r\n\r\n## Scenario \r\nYour marketplace is focused on buying and selling electronic goods. Sellers register with your site and list items for sale. Buyers search and browse, and reach out to your sellers for quotation & the purchase (payment) of items happen outside your website. \r\n\r\nYou are considering offering payment capability in your marketplace for your buyers and sellers to manage end to end purchase process. Criteria’s important for you to enable payments on your website are…\r\n* Secure escrow payments to eliminate the risk of fraud \r\n* Licensed payment provider to process & hold payments safely\r\n* Track shipments \r\n* Handle dispute between buyer & seller\r\n* Transfer payments quickly to seller\r\n\r\nAll in all, you want a service provider who can help you with offering a simple & secure escrow payment service to users on your marketplace while you focus on offering the best user experience to your users.\r\n\r\n## Simple Approach\r\n\r\nTo get up and running quickly, you decide that for your first version you'll leverage the Payoneer Escrow user interface as much as possible.\r\n\r\n### 1. Seller setup\r\nYou will have to create an account for your seller & also setup their payout preference on Payoneer before they can participate in an escrow transaction. During account creation, Payoneer conducts a comprehensive KYC check before approving the user to use escrow. \r\n\r\nWe recommend you to add seller escrow setup to your onboarding process to eliminate RISKY sellers on your marketplace by leveraging our KYC checks for account approval.\r\n\r\n#### 1.1 Create a seller account\r\nYou can POST the partner details to accounts resource in Payoneer escrow API set to create an account for the seller. This also creates a user for that account. \r\n\r\nAs part of account creation, we perform comprehensive KYC check on the user before enabling escrow for the user. KYC process involves checking the user against OFAC sanctioned list, etc…. [jai to update]\r\n\r\nURI: /accounts\r\n\r\nParameters:\r\n\r\nParameter | Type | Required? | Description\r\n------------ | ------------- | ------------ | -------------\r\ncompany | string | optional | The name of the company (will use the user_name if none supplied)\r\nuser_name|string|required|The name of a contact at the company\r\nuser_email|string|required|The contact's email address\r\nuser_phone|string|required|The contact's phone number. Formatted with a plus sign, followed by the international dialing code, followed by a space, followed by the phone number (e.g. \"+1 5551234567\")\r\naddress|string|required|The company mailing street address\r\ncity|string|required|The mailing address city\r\nstate|string|required|The mailing address state/province (for US and Canadian addresses, use the 2-letter abbreviation for the state/province)\r\npostal_code|string|required\t|The mailing address zip/postal code\r\ncountry|string|required|The mailing address country (2-letter ISO country code)\r\nemail_confirmed|bool|optional|Has the user email address already been confirmed?\r\nagreed_terms|bool|optional|Has the user agreed to the Armor Payments terms and conditions?\r\n\r\n**Sample Parameters**\r\n````\r\n{     \r\n\t\"company\": \"ACME Inc.\",     \r\n\t\"user_name\": \"John Doe\",     \r\n\t\"user_email\": \"j.doe@example.com\",     \r\n\t\"user_phone\": \"+1 123-555-1234\",     \r\n\t\"address\": \"123 Main St.\",     \r\n\t\"city\": \"Anytown\",     \r\n\t\"state\": \"CA\",     \r\n\t\"zip\": \"12345\",     \r\n\t\"country\": \"us\",     \r\n\t\"email_confirmed\": true,     \r\n\t\"agreed_terms\": true \r\n}\r\n````\r\n\r\n**Sample Return**\r\n````\r\n{  \r\n\t\"account_id\": 290465,     \r\n\t\"company\": \"ACME Inc.\",     \r\n\t\"address\": \"123 Main St.\",     \r\n\t\"city\": \"Anytown\",     \r\n\t\"state\": \"CA\",     \r\n\t\"postal_code\": \"12345\",     \r\n\t\"country\": \"us\",     \r\n\t\"created\": \"2014-01-28T17:31:25+00:00\",     \r\n\t\"uri\": \"/accounts/290465\" \r\n}\r\n````  \r\n\r\n#### What is the difference between account & user?\r\n* Account represents a company. Learn more\r\n* User represents a person at that company. Learn more\r\n\r\nNow that you have created an account for the seller, you can setup the seller to enable escrow & also their payout preference.\r\n\r\n#### 1.2 Lookup users on the new seller account\r\nYou can GET the user linked to the seller account by passing the account details to accounts resource in Payoneer escrow API. \r\n\r\nURI: /accounts/\\<Seller_Account_ID\\>/users\r\n\r\n_(Ex: /accounts/290465/users where 290465 is the account id of the seller.)_\r\n\r\n\r\n**Sample Return**\r\n````\r\n[     \r\n\t{         \r\n\t\t\"user_id\": 17792,         \r\n\t\t\"account_id\": 290465,         \r\n\t\t\"name\": \"John Doe\",         \r\n\t\t\"email\": \"j.doe@example.com\",         \r\n\t\t\"phone\": \"+1 123-555-1234\",         \r\n\t\t\"confirmed\": true,         \r\n\t\t\"agreed_terms\": \"2013-11-28T23:19:42+00:00\",         \r\n\t\t\"created\": \"2013-11-28T23:19:42+00:00\",         \r\n\t\t\"uri\": \"/accounts/290465/users/17792\"     \r\n\t} \r\n]\r\n````  \r\n\r\n#### 1.3 Setup Escrow & Payout preference for seller\r\nNow that you have the account created for seller, you need to enable escrow for the seller on Payoneer & also setup their payout preference to withdraw their payments from escrow. \r\n\r\nEscrow setup & Payout preference will be done on Payoneer interface (modal boxes) so you need to generate an Payoneer authenticated URL to direct the user through an iFrame. [Learn more about Payoneer Authentication](http://www.armorpayments.com/api/classes/ArmorPayments.Api.Resource.Authentications.html)\r\n\r\n**Sample URI** /accounts/290465/users/17792/authentications <br />\r\n_(290465 is the seller account id & 17792 is the seller user id)_\r\n\r\n**Sample Parameters**\r\n```\r\n{     \r\n    \"uri\": \"/accounts/290465/bankaccounts\",     \r\n    \"action\": \"create\" \r\n}\r\n````\r\n**Sample Return**\r\n````\r\n{     \r\n\t\"user_id\": 17792,     \r\n\t\"account_id\": 290465,     \r\n\t\"uri\": \"/accounts/290465/bankaccounts\",     \r\n\t\"action\": \"create\",     \r\n\t\"url\": \"https://app.armorpayments.com/accounts/290465/bankaccounts?action=create&user_auth_token=fa7c6352d60b2128b91767ee5b6a32e7\",     \r\n\t\"created\": \"2014-07-21T22:26:52-05:00\",     \r\n\t\"expires\": \"2014-07-21T23:26:52-05:00\" \r\n}\r\n````\r\n\r\nNow you can display the URL returned in a modalbox on your marketplace for the seller to enable escrow & setup their payout preference. \r\n````\r\n<!-- The Armor Payments lightbox JS requires jQuery. If your site already includes jQuery, omit this line --> \r\n<script src=\"https://code.jquery.com/jquery-1.11.2.min.js\" type=\"text/javascript\"></script> \r\n\r\n<!-- Sandbox environment? Use this script: --> \r\n<script src=\"https://sandbox.armorpayments.com/assets/js/modal.min.js\" type=\"text/javascript\"></script> \r\n\r\n<!-- Production environment? Use this script: --> \r\n<!-- <script src=\"https://app.armorpayments.com/assets/js/modal.min.js\" type=\"text/javascript\"></script> --> \r\n\r\n<script type=\"text/javascript\">     \r\n// Use the URL returned from the /authentications request     \r\n\tvar url = \"https://app.armorpayments.com/accounts/290465/bankaccounts?action=create&user_auth_token=fa7c6352d60b2128b91767ee5b6a32e7\";     \r\n\tarmor.openModal(url); \r\n</script>\r\n````\r\n\r\n**NOTE**: We recommend you to always point to javascript link on Payoneer website & not host it on your website. We constantly add features & fix bugs which gets pushed to the javascript on Payoneer website.\r\n\r\n**What seller needs to do in modal box?**\r\n\r\nSeller needs to agree to Payoneer escrow terms to enable escrow & also configure the payment methods eligible for buyer to transfer funds into escrow.\r\n\r\n![Sample screenshot of Enable Payoneer Escrow](https://raw.githubusercontent.com/jai2010/marketplace/gh-pages/images/Enable_escrow.png)\r\n\r\nAfter enabling escrow, seller needs to configure the payout preference to receive funds from escrow. Sellers can either create an account on Payoneer & manage their funds on Payoneer or provide bank details to transfer funds directly to their bank account.\r\n\r\n![Payoneer Payout Preference](https://raw.githubusercontent.com/jai2010/marketplace/gh-pages/images/Payoneer_Payout.png)\r\n______________\r\n\r\n### 2. Create Order\r\nOnce the seller has enabled escrow & setup their payout preference, seller is ready to accept secure escrow payments from buyers. \r\n\r\nTo create a secure escrow order on Payoneer, you will require Payoneer account for buyer as well. We recommend you to create an account for the buyer when the buyer or seller is ready to create an escrow order. [Click here](http://jai2010.github.io/marketplace/#11-create-a-seller-account) learn more about how to create a Buyer account.\r\n\r\nEscrow order can be created by POSTing the order details to Payoneer order API resource. [Learn more about Payoneer Order resource](http://www.armorpayments.com/api/classes/ArmorPayments.Api.Resource.Orders.html)\r\n\r\n**Sample URI**: /accounts/290465/orders <br />\r\n_(290465 is the account id of seller)_\r\n\r\n**Sample Parameters**\r\n````\r\n{     \r\n\t\"type\": 1,     \r\n\t\"seller_id\": 17792, //seller_id is the user id of seller    \r\n\t\"buyer_id\": 29338,  //buyer_id is the user id of buyer \r\n\t\"amount\": 10000,     \r\n\t\"summary\": \"Example Goods Order\",     \r\n\t\"description\": \"An escrow for goods order for use as an example.\",     \r\n\t\"invoice_num\": \"12345\",     \r\n\t\"purchase_order_num\": \"67890\",     \r\n\t\"message\": \"Hello, Example Buyer! Thank you for your example goods order.\"  \r\n}\r\n````\r\n\r\n**Sample Return**\r\n````\r\n{     \r\n\t\"order_id\": 1401028714,     \r\n\t\"account_id\": 290465,     \r\n\t\"seller_id\": 17792, //seller_id is the user id of seller  \r\n\t\"buyer_account_id\": 452981,     \r\n\t\"buyer_id\": 29338,  //buyer_id is the user id of buyer  \r\n\t\"type\": 1,     \r\n\t\"status\": 1,     \r\n\t\"amount\": 10000,     \r\n\t\"balance\": 0,     \r\n\t\"available_balance\": 0,     \r\n\t\"summary\": \"Example Goods Order\",     \r\n\t\"description\": \"An escrow for goods order for use as an example.\",     \r\n\t\"invoice_num\": \"12345\",     \r\n\t\"purchase_order_num\": \"67890\",     \r\n\t\"status_change\": \"2014-01-02T20:48:27+00:00\",     \r\n\t\"created\": \"2014-01-02T20:48:27+00:00\",     \r\n\t\"uri\": \"/accounts/290465/orders/1401028714\" \r\n}\r\n````\r\n______________\r\n\r\n### 3. Buyer transfer funds into escrow\r\nWhen the buyer is ready to transfer funds into escrow, display payment instructions iFrame to the user. Payment instructions URL can be generated by POSTing the account, order details to Payoneer API.\r\n\r\n**API Resource**: [POST authentications](http://www.armorpayments.com/api/classes/ArmorPayments.Api.Resource.Authentications.html)\r\n\r\n**Sample URI**:  /accounts/452981/users/29338/authentications\r\n_(452981 is the account id & 29338 is the user id of buyer)_\r\n\r\n**Sample Parameters**\r\n```` JSON\r\n{     \r\n    \"uri\": \"/accounts/290465/orders/1401028714/paymentinstructions\",     \r\n    \"action\": \"view\" \r\n}\r\n````\r\n**Sample Return**\r\n```` JSON\r\n{     \r\n\t\"user_id\": 29338,     \r\n\t\"account_id\": 452981,     \r\n\t\"uri\": \"/accounts/290465/orders/1401028714/paymentinstructions\",     \r\n\t\"action\": \"view\",     \r\n\t\"url\": \"https://app.armorpayments.com/accounts/290465/orders/1401028714/paymentinstructions?action=view&user_auth_token=fa7c6352d60b2128b91767ee5b6a32e7\",     \r\n\t\"created\": \"2014-07-21T22:26:52-05:00\",     \r\n\t\"expires\": \"2014-07-21T23:26:52-05:00\" \r\n}\r\n````",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}